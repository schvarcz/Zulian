<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Estimativa de tamanho populacional de Amazona vinacea - by Viviane Zulian</title>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <script src="http://code.jquery.com/jquery-1.9.1.js" type="text/javascript"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <script>
    $(function () {
        $('#container').highcharts({
            chart: {
                type: 'line',
                margin: [70, 50, 60, 80],
            },
            title: {
                text: 'Fuzzy Number'
            },
            subtitle: {
                text: 'Arraste o ponto do gráfico para melhor ajustar a curva.'
            },
            xAxis: {
                title: {
                    text: 'Número de indivíduos'
                },
                gridLineWidth: 1,
                minPadding: 0.2,
                maxPadding: 0.2,
                maxZoom: 60
            },
            yAxis: {
                title: {
                    text: 'Possibilidade'
                },
                labels:{
                    formatter: function () {
                        if (this.value <= 1.)
                            return this.value;
                        return "";
                    }
                },
                minPadding: 0.2,
                maxPadding: 0.2,
                maxZoom: 60,
                min: 0,
                max: 1.2,
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                formatter: function () {
                    var point = this.points[0];
                    if (this.y)
                        return '<b>' + point.series.name + '</b><br/> Confiança de 100% que é possivel encontrar ' + this.x + ' aves neste dormitório.<br/>';
                    return '<b>' + point.series.name + '</b><br/> Confiança de 100% que <b>NÃO</b> é possivel encontrar ' + this.x + ' aves neste dormitório.<br/>';
                },
                shared: true
            },
            legend: {
                enabled: false
            },
            exporting: {
                enabled: false
            },
            plotOptions: {
                series: {
                    lineWidth: 1,
                    dataLabels: {
                        enabled: true,
                        format: "{x}",
                    },
                    point: {
                        events: {
                            drop: function (e) {
                                var data = $('#container').highcharts().series[0].data;
                                for (i = 0; i < 4; i++)
                                    data[i].update([Math.round(data[i].x), data[i].y])
                                $(".bottom-left").val(data[0].x);
                                $(".top-left").val(data[1].x);
                                $(".top-right").val(data[2].x);
                                $(".bottom-right").val(data[3].x);
                            },

                        }
                    }
                }
            },
            series: [{
                name: "Nro de indivíduos",
                data: [[0, 0], [20, 1], [50, 1], [70, 0]],
                draggableX: true,
                color: "#7cb5ec"
            }]
        });

        $(".bottom-left, .top-left, .top-right, .bottom-right").keyup(function () {
            var chart = $('#container').highcharts();
            data = [
                [parseInt($(".bottom-left").val()), 0],
                [parseInt($(".top-left").val()), 1],
                [parseInt($(".top-right").val()), 1],
                [parseInt($(".bottom-right").val()), 0]];
            for (i = 1; i < 4; i++)
                if (data[i][0] < data[i - 1][0])
                    return;
            chart.series[0].setData(data, true, null, true);

        });

        /**************
        * Geolocation *
        **************/
        var map, marker;

        var mapOptions = {
            zoom: 15,
            center: new google.maps.LatLng(-30.069219677447972, -51.11992349590588),
            mapTypeId: google.maps.MapTypeId.SATELLITE,
            streetViewControl: false
        };

        map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

        marker = new google.maps.Marker({
            position: map.getCenter(),
            map: map,
            draggable: true,
            animation: google.maps.Animation.DROP
        });

        google.maps.event.addListener(map, 'center_changed', function () {
            // 3 seconds after the center of the map has changed, pan back to the
            // marker.

            var latLng = map.getCenter();

            $(".lat").val(latLng.lat());
            $(".lng").val(latLng.lng());
            marker.setPosition(latLng);

        });

        google.maps.event.addListener(marker, 'dragend', function () {
            var position = marker.getPosition();
            $(".lat").val(position.lat());
            $(".lng").val(position.lng());
            window.setTimeout(function () {
                map.panTo(marker.getPosition());
                if (map.getZoom() < 15)
                    map.setZoom(15);
            }, 1000);
        });


        if (navigator.geolocation)
            navigator.geolocation.getCurrentPosition(function (location) {
                var lat = location.coords.latitude;
                var lng = location.coords.longitude;
                var latLng = new google.maps.LatLng(lat, lng);

                $(".lat").val(lat);
                $(".lng").val(lng);
                map.setCenter(latLng);
                marker.setPosition(latLng);
            });
        $(".lat,.lng").keyup(function () {
            var latLng = new google.maps.LatLng(parseFloat($(".lat").val()), parseFloat($(".lng").val()));
            map.setCenter(latLng);
        });

        setTimeout(function () {
            $(".page").css({ visibility: "visible", display: "table-cell" }).hide();
            $(".page").first().fadeIn();
        }, 2000);

        $(".startup").click(function () {
            $(this).parents(".page").fadeOut(500, "linear", function () {
                $(window).scrollTop(0);
                $(this).next().fadeIn(500, "linear", function () {
                    function animateSplash() {
                        $(this).delay(1000).fadeOut(1000, "linear", function () {
                            if ($(this).next().length)
                                $(this).next().fadeIn(1000, "linear", animateSplash);
                            else
                                $(".page").last().fadeIn();
                        })
                    }
                    $(this).find("h1").first().fadeIn(1000, "linear", animateSplash);
                }).find("h1").hide();
            });
        });
    });

    </script>
    <style>
        html, body {
            height: 100%;
        }

        .site-wrapper {
            min-height: 100%;
            padding-bottom: 80px;

            display:table;
            width:100%;
        }

        #map-canvas {
            height: 300px;
            margin: 0;
            padding: 0;
        }

        .body-content {
            min-height: 100%;
        }

        .page {
            visibility: hidden;

            margin: 0px auto;
            vertical-align: middle;
            display: table-row;
        }

        .center-block {
            display: block;
            margin-left: auto;
            margin-right: auto;
        }

        footer {
            margin-top: -50px;
        }
        
    </style>
</head>
<body>
    <script src="http://code.highcharts.com/highcharts.js" type="text/javascript"></script>
    <script src="http://code.highcharts.com/modules/exporting.js" type="text/javascript"></script>
    <script src="https://rawgithub.com/highslide-software/draggable-points/master/draggable-points.js"></script>

    <div class="site-wrapper">
            @RenderBody()
    </div>
    <footer>
        <div class="container">
            <hr />
            <p>&copy; @DateTime.Now.Year - Viviane Zulian</p>
        </div>
    </footer>

</body>
</html>
